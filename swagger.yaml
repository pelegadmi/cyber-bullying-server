tags:
- name: users
  description: users API
- name: scenarios
  description: scenarios API
- name: admin
  description: admin API

paths:
# [GET] users
  /users:
    get:
      tags:
      - users
      summary: Find All Users
      responses:
        200:
          description: 'OK'
        500:
          description: 'Server Error'

# [POST] users
    post:
      tags:
      - users
      summary: Add User
      parameters:
      - name: body
        in: body
        description: create user dto
        required: true
        schema:
          $ref: '#/definitions/create-user-dto'
      responses:
        201:
          description: 'Created'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

# [GET] users/id
  /users/{id}:
    get:
      tags:
      - users
      summary: Find User By Id
      parameters:
      - name: id
        in: path
        description: User Id
        required: true
      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

# [PUT] users/id
    put:
      tags:
      - users
      summary: Update User By Id
      parameters:
      - name: id
        in: path
        description: user Id
        required: true
      - name: body
        in: body
        description: update user dto
        required: true
        schema:
          $ref: '#/definitions/update-user-dto'
      responses:
        200:
          description: 'OK'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

# [DELETE] users/id
    delete:
      tags:
      - users
      summary: Delete User By Id
      parameters:
      - name: id
        in: path
        description: user Id
        required: true
      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

  /users/update-messages/{id}:
    # [PUT] users/update-messages/id
    put:
      tags:
        - users
      summary: Update User By Id
      parameters:
        - name: id
          in: path
          description: user Id
          required: true
        - name: body
          in: body
          description: update user dto
          required: true
          schema:
            $ref: '#/definitions/add-user-messages-dto'
      responses:
        200:
          description: 'OK'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

  /scenarios:
    get:
      tags:
        - scenarios
      summary: Find All scenarios
      responses:
        200:
          description: 'OK'
        500:
          description: 'Server Error'

    # [POST] users
    post:
      tags:
        - scenarios
      summary: Add scenario
      parameters:
        - name: body
          in: body
          description: create scenario dto
          required: true
          schema:
            $ref: '#/definitions/create-scenario-dto'
      responses:
        201:
          description: 'Created'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

  # [GET] scenarios/id
  /scenarios/{id}:
    get:
      tags:
        - scenarios
      summary: Find scenario By Id
      parameters:
        - name: id
          in: path
          description: scenario Id
          required: true
      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

    # [PUT] scenarios/id
    put:
      tags:
        - scenarios
      summary: Update scenario By Id
      parameters:
        - name: id
          in: path
          description: scenario Id
          required: true
        - name: body
          in: body
          description: create scenario dto
          required: true
          schema:
            $ref: '#/definitions/create-scenario-dto'
      responses:
        200:
          description: 'OK'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

    # [DELETE] scenarios/id
    delete:
      tags:
        - scenarios
      summary: Delete scenario By Id
      parameters:
        - name: id
          in: path
          description: scenario Id
          required: true
      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

  /admin:
    # [POST] users
    post:
      tags:
        - admin
      summary: Admin Login
      parameters:
        - name: body
          in: body
          description: admin login dto
          required: true
          schema:
            $ref: '#/definitions/admin-login-dto'
      responses:
        201:
          description: 'Logged in'
        400:
          description: 'Password incorrect'



# definitions
definitions:
  admin-login-dto:
    type: object
    required:
      - password
    properties:
      password:
        type: string
        description: admin password

  scenario-message:
    type: object
    required:
      - text
      - milliseconds_offset
      - nickname
    properties:
      text:
        type: string
        description: message content
      milliseconds_offset:
        type: number
        description: milliseconds from scenario start time
      nickname:
        type: string
        description: sender's nickname

  user-message:
    type: object
    required:
      - text
      - milliseconds_offset
    properties:
      text:
        type: string
        description: message content
      milliseconds_offset:
        type: number
        description: milliseconds from scenario start time

  create-user-dto:
    type: object
    required:
        - nickname
    properties:
      nickname:
        type: string
        description: user nickname

  update-user-dto:
    type: object
    required:
        - nickname
        - messages
        - scenarioId
    properties:
      nickname:
        type: string
        description: user nickname
      messages:
        type: array
        items:
          $ref: '#/definitions/user-message'
        description: user messages
      scenarioId:
        type: string
        description: user scenario id

  add-user-messages-dto:
    type: object
    required:
      - messages
    properties:
      messages:
        type: array
        items:
          $ref: '#/definitions/user-message'
        description: user messages

  create-scenario-dto:
    type: object
    required:
      - severity
      - commentType
      - numberOfUsers
      - messages
    properties:
      severity:
        type: string
        description: scenario's severity
      commentType:
        type: string
        description: scenario's comments type
      numberOfUsers:
        type: number
        description: number of users in scenario
      messages:
        type: array
        items:
          $ref: '#/definitions/scenario-message'
        description: scenario messages

schemes:
 - https
 - http
