tags:
- name: users
  description: users API

paths:
# [GET] users
  /users:
    get:
      tags:
      - users
      summary: Find All Users
      responses:
        200:
          description: 'OK'
        500:
          description: 'Server Error'

# [POST] users
    post:
      tags:
      - users
      summary: Add User
      parameters:
      - name: body
        in: body
        description: create user dto
        required: true
        schema:
          $ref: '#/definitions/create-user-dto'
      responses:
        201:
          description: 'Created'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

# [GET] users/id
  /users/{id}:
    get:
      tags:
      - users
      summary: Find User By Id
      parameters:
      - name: id
        in: path
        description: User Id
        required: true
      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

# [PUT] users/id
    put:
      tags:
      - users
      summary: Update User By Id
      parameters:
      - name: id
        in: path
        description: user Id
        required: true
      - name: body
        in: body
        description: update user dto
        required: true
        schema:
          $ref: '#/definitions/update-user-dto'
      responses:
        200:
          description: 'OK'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

# [DELETE] users/id
    delete:
      tags:
      - users
      summary: Delete User By Id
      parameters:
      - name: id
        in: path
        description: user Id
        required: true
      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

# definitions
definitions:
  create-user-dto:
    type: object
    required:
        - nickname
        - scenarioId
    properties:
      nickname:
        type: string
        description: user nickname
      scenarioId:
        type: string
        description: user scenario id
  update-user-dto:
    type: object
    required:
        - nickname
        - messages
        - scenarioId
    properties:
      nickname:
        type: string
        description: user nickname
      messages:
        type: array
        items:
          type: string
        description: user messages
      scenarioId:
        type: string
        description: user scenario id

schemes:
 - https
 - http
